{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mern\\\\Devapp\\\\client\\\\src\\\\components\\\\posts\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../../actions/Post_action';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = ({\n  getPosts,\n  posts\n}) => {\n  _s();\n  const {\n    loading,\n    post\n  } = posts;\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 20\n  }, this) : test;\n};\n_s(Posts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Posts;\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  post: state.posts\n});\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","PropTypes","connect","getPosts","Spinner","jsxDEV","_jsxDEV","Posts","posts","_s","loading","post","fileName","_jsxFileName","lineNumber","columnNumber","test","_c","propTypes","func","isRequired","object","mapStateToProps","state","$RefreshReg$"],"sources":["D:/Mern/Devapp/client/src/components/posts/Posts.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getPosts } from '../../actions/Post_action';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Posts = ({ getPosts, posts }) => {\r\n  const { loading, post } = posts;\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n  return loading ? <Spinner /> : test;\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  post: state.posts,\r\n});\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,OAAOC,OAAO,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAC;EAAEJ,QAAQ;EAAEK;AAAM,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGH,KAAK;EAC/BR,SAAS,CAAC,MAAM;IACdG,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EACd,OAAOO,OAAO,gBAAGJ,OAAA,CAACF,OAAO;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,GAAGC,IAAI;AACrC,CAAC;AAACP,EAAA,CANIF,KAAK;AAAAU,EAAA,GAALV,KAAK;AAQXA,KAAK,CAACW,SAAS,GAAG;EAChBf,QAAQ,EAAEF,SAAS,CAACkB,IAAI,CAACC,UAAU;EACnCT,IAAI,EAAEV,SAAS,CAACoB,MAAM,CAACD;AACzB,CAAC;AACD,MAAME,eAAe,GAAIC,KAAK,KAAM;EAClCZ,IAAI,EAAEY,KAAK,CAACf;AACd,CAAC,CAAC;AACF,eAAeN,OAAO,CAACoB,eAAe,EAAE;EAAEnB;AAAS,CAAC,CAAC,CAACI,KAAK,CAAC;AAAC,IAAAU,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}