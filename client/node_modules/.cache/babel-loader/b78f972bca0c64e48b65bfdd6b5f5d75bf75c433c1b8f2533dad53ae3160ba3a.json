{"ast":null,"code":"import { ADD_POST, DELTE_POST, GET_POSTS, GET_SINGLE_POST, POST_ERROR, UPDATE_LIKES } from '../actions/Types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map(post => post._id === payload.id ? {\n          likes: payload.likes,\n          ...post\n        } : post),\n        loading: false\n      };\n    case DELTE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n    case GET_SINGLE_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n}","map":{"version":3,"names":["ADD_POST","DELTE_POST","GET_POSTS","GET_SINGLE_POST","POST_ERROR","UPDATE_LIKES","initialState","posts","post","loading","error","state","action","type","payload","map","_id","id","likes","filter"],"sources":["D:/Mern/Devapp/client/src/reducers/Post.js"],"sourcesContent":["import {\r\n  ADD_POST,\r\n  DELTE_POST,\r\n  GET_POSTS,\r\n  GET_SINGLE_POST,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n} from '../actions/Types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id ? { likes: payload.likes, ...post } : post\r\n        ),\r\n        loading: false,\r\n      };\r\n    case DELTE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== payload),\r\n        loading: false,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false,\r\n      };\r\n    case GET_SINGLE_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false,\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n"],"mappings":"AAAA,SACEA,QAAQ,EACRC,UAAU,EACVC,SAAS,EACTC,eAAe,EACfC,UAAU,EACVC,YAAY,QACP,kBAAkB;AAEzB,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,CAAC;AACV,CAAC;;AAED;AACA,eAAe,UAAUC,KAAK,GAAGL,YAAY,EAAEM,MAAM,EAAE;EACrD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChC,QAAQC,IAAI;IACV,KAAKX,SAAS;MACZ,OAAO;QACL,GAAGS,KAAK;QACRJ,KAAK,EAAEO,OAAO;QACdL,OAAO,EAAE;MACX,CAAC;IACH,KAAKJ,YAAY;MACf,OAAO;QACL,GAAGM,KAAK;QACRJ,KAAK,EAAEI,KAAK,CAACJ,KAAK,CAACQ,GAAG,CAAEP,IAAI,IAC1BA,IAAI,CAACQ,GAAG,KAAKF,OAAO,CAACG,EAAE,GAAG;UAAEC,KAAK,EAAEJ,OAAO,CAACI,KAAK;UAAE,GAAGV;QAAK,CAAC,GAAGA,IAChE,CAAC;QACDC,OAAO,EAAE;MACX,CAAC;IACH,KAAKR,UAAU;MACb,OAAO;QACL,GAAGU,KAAK;QACRJ,KAAK,EAAEI,KAAK,CAACJ,KAAK,CAACY,MAAM,CAAEX,IAAI,IAAKA,IAAI,CAACQ,GAAG,KAAKF,OAAO,CAAC;QACzDL,OAAO,EAAE;MACX,CAAC;IACH,KAAKT,QAAQ;MACX,OAAO;QACL,GAAGW,KAAK;QACRJ,KAAK,EAAE,CAACO,OAAO,EAAE,GAAGH,KAAK,CAACJ,KAAK,CAAC;QAChCE,OAAO,EAAE;MACX,CAAC;IACH,KAAKN,eAAe;MAClB,OAAO;QACL,GAAGQ,KAAK;QACRH,IAAI,EAAEM,OAAO;QACbL,OAAO,EAAE;MACX,CAAC;IACH,KAAKL,UAAU;MACb,OAAO;QACL,GAAGO,KAAK;QACRD,KAAK,EAAEI,OAAO;QACdL,OAAO,EAAE;MACX,CAAC;IACH;MACE,OAAO;QAAE,GAAGE;MAAM,CAAC;EACvB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}